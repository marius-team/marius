.. _end_to_end_example

******************
End to End Example
******************

Users can :ref:`preprocess<preprocessing>` the datasets, deploy Marius, and postprocess the training outcomes 
in a configuration-based programming pattern through the command line. The following 
is a comprehensive example showing how users can use the system to perform the tasks (assuming 
users have Marius installed properly):

* :ref:`preprocess datasets<Preprocess_datasets>`
* :ref:`deploy Marius<Deploy_marius>`
* :ref:`postprocess training results<Postprocess_training_results>`
* perform inference tasks



.. _Preprocess_datasets:

Preprocess Datasets
-------------------
Marius provides the users with ``marius_preprocess`` as a handy tool for preprocessing
datasets supported by Marius and custome datasets. Detailed usage of ``marius_preprocess`` 
can be found :ref:`here<preprocessing>`. 

The following example shows how to preprocess dataset WordNet18
and store the converted Marius trainable data into directory ``./output_dir`` using ``marius_preprocess``. 
In addition, it also asks ``marius_preprocess`` to generate
a Marius configuration file using CPU by ``--generate_config CPU``.
In the Marius configuration file, the configuration parameter ``training.num_epochs`` 
is set by ``--training.num_epochs=1`` for the purpose of demonstration.

The terminal output shows some progress information and statistics of dataset WordNet18.

::

    user@ubuntu: marius_preprocess wn18 ./output_dir --generate_config CPU --training.num_epochs=1
    Downloading fetch.phpmedia=en:wordnet-mlj12.tar.gz to output_dir/fetch.phpmedia=en:wordnet-mlj12.tar.gz
    Extracting
    Extraction completed
    Detected delimiter: ~   ~
    Reading in output_dir/wordnet-mlj12-train.txt   1/3
    Reading in output_dir/wordnet-mlj12-valid.txt   2/3
    Reading in output_dir/wordnet-mlj12-test.txt   3/3
    Number of instance per file: [141442, 5000, 5000]
    Number of nodes: 40943
    Number of edges: 151442
    Number of relations: 18
    Delimiter: ~    ~

The ``./output_dir`` includes the raw data for WordNet18, files generated by ``marius_preprocess`` and the 
Marius configuration file ``wn18_cpu.ini``.

::

    user@ubuntu: ls ./output_dir
    README              node_mapping.txt  test_edges.pt   wn18_cpu.ini                   wordnet-mlj12-train.txt
    Wordnet3.0-LICENSE  rel_mapping.bin   train_edges.pt  wordnet-mlj12-definitions.txt  wordnet-mlj12-valid.txt
    node_mapping.bin    rel_mapping.txt   valid_edges.pt  wordnet-mlj12-test.txt


.. _Deploy_marius:
Deploy Marius
-------------
Execution Marius does not need the users to write a line of code. Only the Marius 
configuration file is required. Users can tune the configuration parameters in the 
Marius configuration file according to their needs. Detailed manual of how to 
tune the Marius configuration parameters is presented :ref:`here<configuration>`.
In this example, we use the Marius configuration file generated in :ref:`previous section<Preprocess_datasets>`.

::

    user@ubuntu: marius_train ./output_dir/wn18_cpu.ini
    ['/usr/local/bin/marius_train', './output_dir/wn18_cpu.ini']
    [info] [07/25/21 07:26:28.457] Start preprocessing
    [info] [07/25/21 07:26:28.687] Training set initialized
    [info] [07/25/21 07:26:28.687] Evaluation set initialized
    [info] [07/25/21 07:26:28.687] Preprocessing Complete: 0.23s
    [info] [07/25/21 07:26:28.729] ################ Starting training epoch 1 ################
    [info] [07/25/21 07:26:29.049] Total Edges Processed: 10000, Percent Complete: 0.133
    [info] [07/25/21 07:26:29.116] Total Edges Processed: 20000, Percent Complete: 0.200
    [info] [07/25/21 07:26:29.203] Total Edges Processed: 30000, Percent Complete: 0.267
    [info] [07/25/21 07:26:29.279] Total Edges Processed: 40000, Percent Complete: 0.067
    [info] [07/25/21 07:26:29.364] Total Edges Processed: 50000, Percent Complete: 0.400
    [info] [07/25/21 07:26:29.428] Total Edges Processed: 60000, Percent Complete: 0.333
    [info] [07/25/21 07:26:29.506] Total Edges Processed: 70000, Percent Complete: 0.467
    [info] [07/25/21 07:26:29.601] Total Edges Processed: 80000, Percent Complete: 0.533
    [info] [07/25/21 07:26:29.691] Total Edges Processed: 90000, Percent Complete: 0.600
    [info] [07/25/21 07:26:29.770] Total Edges Processed: 100000, Percent Complete: 0.667
    [info] [07/25/21 07:26:29.835] Total Edges Processed: 110000, Percent Complete: 0.733
    [info] [07/25/21 07:26:29.951] Total Edges Processed: 120000, Percent Complete: 0.867
    [info] [07/25/21 07:26:30.034] Total Edges Processed: 130000, Percent Complete: 0.800
    [info] [07/25/21 07:26:30.128] Total Edges Processed: 140000, Percent Complete: 0.933
    [info] [07/25/21 07:26:30.173] Total Edges Processed: 141442, Percent Complete: 1.000
    [info] [07/25/21 07:26:30.173] ################ Finished training epoch 1 ################
    [info] [07/25/21 07:26:30.173] Epoch Runtime (Before shuffle/sync): 1444ms
    [info] [07/25/21 07:26:30.173] Edges per Second (Before shuffle/sync): 97951.52
    [info] [07/25/21 07:26:30.174] Pipeline flush complete
    [info] [07/25/21 07:26:30.183] Edges Shuffled
    [info] [07/25/21 07:26:30.183] Epoch Runtime (Including shuffle/sync): 1453ms
    [info] [07/25/21 07:26:30.183] Edges per Second (Including shuffle/sync): 97344.805
    [info] [07/25/21 07:26:30.230] Starting evaluating
    [info] [07/25/21 07:26:30.348] Pipeline flush complete
    [info] [07/25/21 07:26:30.506] Num Eval Edges: 5000
    [info] [07/25/21 07:26:30.506] Num Eval Batches: 5
    [info] [07/25/21 07:26:30.506] Auc: 0.617, Avg Ranks: 387.843, MRR: 0.052, Hits@1: 0.029, Hits@5: 0.064, Hits@10: 0.088, Hits@20: 0.123, Hits@50: 0.185, Hits@100: 0.260
    [info] [07/25/21 07:26:30.507] Evaluation complete: 277ms

``marius_train`` gives informative terminal outputs including training progress, 
system performance, and training results evalution. 

After the start of the training, ``marius_train`` outputs the training progress information,
indlucding number of edges processed, number of epochs have been processed. When an epoch is 
completed, system performance information such as ``Epoch Runtime (Before shuffle/sync)``,
``Edges per Second (Before shuffle/sync)``, ``Epoch Runtime (Including shuffle/sync)``, and
``Edges per Second (Including shuffle/sync)``.

Training results evalution information is also printed by ``marius_train`` to the terminal automatically.
The metrics for evalution include ``Auc``, ``Avg Ranks``, ``MRR``, ``Hits@1``, 
``Hits@5``, ``Hits@10``, ``Hits@20``, ``Hits@50``, ``Hits@100``.

.. _Postprocess_training_results:
Postprocess Training Results
----------------------------
