name: Testing DB2GRAPH using postgres
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  db2graph-python-3.6:
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: python:3.6.15

    services:
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Installing dependencies
        run: MARIUS_NO_BINDINGS=1 python3 -m pip install .

      - name: Running pytest
        run: pytest -s test/db2graph/test_postgres.py
        # Environment variables used in the test
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: postgres
          # The default PostgreSQL port - using default port
          POSTGRES_PORT: 5432

  db2graph-python-3.7:
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: python:3.7

    services:
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Installing dependencies
        run: MARIUS_NO_BINDINGS=1 python3 -m pip install .

      - name: Running pytest
        run: pytest -s test/db2graph/test_postgres.py
        # Environment variables used in the test
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: postgres
          # The default PostgreSQL port - using default port
          POSTGRES_PORT: 5432

  db2graph-python-3.8:
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: python:3.8

    services:
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Installing dependencies
        run: MARIUS_NO_BINDINGS=1 python3 -m pip install .

      - name: Running pytest
        run: pytest -s test/db2graph/test_postgres.py
        # Environment variables used in the test
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: postgres
          # The default PostgreSQL port - using default port
          POSTGRES_PORT: 5432

  db2graph-python-3.9:
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: python:3.9

    services:
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Installing dependencies
        run: MARIUS_NO_BINDINGS=1 python3 -m pip install .

      - name: Running pytest
        run: pytest -s test/db2graph/test_postgres.py
        # Environment variables used in the test
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: postgres
          # The default PostgreSQL port - using default port
          POSTGRES_PORT: 5432

  db2graph-python-3.10:
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: python:3.10

    services:
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Installing dependencies
        run: MARIUS_NO_BINDINGS=1 python3 -m pip install .

      - name: Running pytest
        run: pytest -s test/db2graph/test_postgres.py
        # Environment variables used in the test
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: postgres
          # The default PostgreSQL port - using default port
          POSTGRES_PORT: 5432
